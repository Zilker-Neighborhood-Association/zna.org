name: Deploy to Live Site

on:
  push:
    branches:
      - 'main'

env:
  php_version: '8.3'

jobs:
  deploy:
    name: Deploy to Live Site
    runs-on: ubuntu-24.04
    env:
      DRUSH: /usr/php83/usr/bin/php ${{ secrets.REPO_PATH }}/vendor/drush/drush/drush.php
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup PHP
        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # 2.32.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          php-version: ${{ env.php_version }}

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Get Composer cache directory
        id: composer-cache-dir
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Avoid GitHub rate limit for Composer
        run: composer config -g github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}

      - name: Composer install
        run: composer install --prefer-dist --no-dev --no-interaction --no-progress

      - name: Set up NPM
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install NPM dependencies
        run: |
          cd web/themes/custom/zna_theme
          npm ci

      - name: Build theme
        run: |
          cd web/themes/custom/zna_theme
          npm run build

      - name: Place SSH key
        uses: shimataro/ssh-key-action@d4fffb50872869abe2d9a9098a6d9c5aa7d16be4 # v2.7.0
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ vars.KNOWN_HOSTS }}

      - name: Prepare code for deployment
        run: |
          git config --global init.defaultBranch main
          git config --global user.email "github-actions@example.com"
          git config --global user.name "GitHub Actions"
          commit_message=$(git log -1 --pretty=%B)
          rm -rf .ddev
          rm -rf .git
          rm -rf .github
          rm -rf web/core/*.txt
          git init
          git config --local gc.auto 0
          git add --force .
          git commit -m "Automated deploy: $commit_message" >/dev/null

      - name: Push code to Live Site
        run: |
          git remote add live ssh://${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}${{ secrets.REPO_PATH }}
          git push --force live HEAD:main

      - name: Configure SSH
        run: |
          cat >>~/.ssh/config <<END
          Host live
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/id_rsa
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: drush zupdatedb
        run: ssh live '${{ env.DRUSH }} zupdatedb'

      - name: drush config:import
        run: ssh live '${{ env.DRUSH }} config:import'

      - name: drush cache:rebuild
        run: ssh live '${{ env.DRUSH }} cache:rebuild'

      - name: drush deploy:hook
        run: ssh live '${{ env.DRUSH }} deploy:hook'
